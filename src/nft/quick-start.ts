// Script de d√©marrage rapide pour tester l'API NFT
// Ex√©cutez avec: npx ts-node src/nft/quick-start.ts

import axios from 'axios';

const API_BASE_URL = 'http://localhost:3000';

async function quickStart() {
  try {
    console.log('üöÄ D√âMARRAGE RAPIDE - API NFT DEFENDR\n');

    // 1. V√©rifier que l'API fonctionne
    console.log('1. V√©rification de l\'API...');
    const healthResponse = await axios.get(`${API_BASE_URL}/nft/health`);
    console.log('‚úÖ API op√©rationnelle:', healthResponse.data);
    console.log('');

    // 2. Cr√©er un compte de test
    console.log('2. Cr√©ation d\'un compte de test...');
    const accountResponse = await axios.post(`${API_BASE_URL}/nft/account/create`, {
      initialBalance: 5,
      maxTokenAssociations: 10
    });
    console.log('‚úÖ Compte cr√©√©:', accountResponse.data);
    console.log('');

    // 3. Mint un NFT simple
    console.log('3. Mint d\'un NFT simple...');
    const mintResponse = await axios.post(`${API_BASE_URL}/nft/mint`, {
      name: 'NFT de Test DEFENDR',
      description: 'Un NFT cr√©√© lors du d√©marrage rapide',
      attributes: {
        rarity: 'common',
        level: 1,
        created_by: 'quick-start'
      }
    });
    console.log('‚úÖ NFT mint√©:', mintResponse.data);
    console.log('');

    // 4. V√©rifier les infos du NFT
    console.log('4. V√©rification des infos NFT...');
    const nftInfo = await axios.get(`${API_BASE_URL}/nft/info/${mintResponse.data.nftId}`);
    console.log('‚úÖ Infos NFT:', nftInfo.data);
    console.log('');

    // 5. V√©rifier le solde du compte
    console.log('5. V√©rification du solde...');
    const balance = await axios.get(`${API_BASE_URL}/nft/balance/${accountResponse.data.accountId}`);
    console.log('‚úÖ Solde du compte:', balance.data);
    console.log('');

    console.log('üéâ D√âMARRAGE RAPIDE TERMIN√â AVEC SUCC√àS !');
    console.log('');
    console.log('üìã R√âSUM√â:');
    console.log(`   - Compte cr√©√©: ${accountResponse.data.accountId}`);
    console.log(`   - NFT mint√©: ${mintResponse.data.nftId}`);
    console.log(`   - Solde HBAR: ${balance.data.hbarBalance}`);
    console.log('');
    console.log('üîó Endpoints disponibles:');
    console.log('   - POST /nft/mint - Mint un NFT');
    console.log('   - POST /nft/mint/with-image - Upload image + mint');
    console.log('   - POST /nft/account/create - Cr√©er un compte');
    console.log('   - GET /nft/balance/:accountId - V√©rifier solde');
    console.log('   - POST /nft/transfer - Transf√©rer NFT');
    console.log('   - Voir src/nft/README.md pour plus de d√©tails');

  } catch (error) {
    console.error('‚ùå Erreur lors du d√©marrage rapide:', error.response?.data || error.message);
    console.log('');
    console.log('üí° V√©rifiez que:');
    console.log('   1. Le serveur est d√©marr√© (npm run start:dev)');
    console.log('   2. Les variables d\'environnement sont configur√©es');
    console.log('   3. Vous √™tes connect√© au r√©seau Hedera testnet');
  }
}

// Ex√©cuter le d√©marrage rapide
quickStart();
